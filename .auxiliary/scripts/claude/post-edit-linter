#!/usr/bin/env python3
# vim: set filetype=python fileencoding=utf-8:
# -*- coding: utf-8 -*-

''' Claude Code hook to run linters after Edit/MultiEdit/Write operations. '''

import json
import subprocess
import sys


def main( ):
    ''' Main entry point for the linter hook. '''
    # Read hook event JSON from stdin
    try:
        event_data = json.load( sys.stdin )
    except json.JSONDecodeError:
        print( "Error: Invalid JSON input", file = sys.stderr )
        sys.exit( 2 )
    
    # Only run linters if the tool operation was successful
    tool_response = event_data.get( 'tool_response', { } )
    if not tool_response.get( 'success', False ):
        # Tool failed, no point running linters
        sys.exit( 0 )
    
    # Run the linters
    try:
        result = subprocess.run(
            [ 'hatch', '--env', 'develop', 'run', 'linters' ],  # noqa: S607
            capture_output = True,
            text = True,
            timeout = 60,
            check = False
        )
    except subprocess.TimeoutExpired:
        print( "Error: Linter command timed out", file = sys.stderr )
        sys.exit( 2 )
    except Exception as exc:
        print( f"Error: {exc}", file = sys.stderr )
        sys.exit( 2 )
    
    # Claude Code expects exit code 2 to show stderr
    if result.returncode != 0:
        print( result.stderr, file = sys.stderr )
        sys.exit( 2 )
    else:
        sys.exit( 0 )


if __name__ == '__main__':
    main()